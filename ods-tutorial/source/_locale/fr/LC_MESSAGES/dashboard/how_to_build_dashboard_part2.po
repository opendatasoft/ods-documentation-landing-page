#
msgid ""
msgstr ""
"Project-Id-Version: OpenDataSoft Tutorials 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-09-13 21:34+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:2
msgid "How to build a dashboard (part 2)"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:10
msgid "★★☆ Intermediate - time: 1 hour"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:12
msgid ""
"*This tutorial will teach you how to go from a simple dashboard with 3 "
"visualizations to an organized, formatted dashboard with interactive widgets"
" linked with one another!*"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:16
msgid "During this tutorial, you will learn:"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:18
msgid "how to link widgets together using a context"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:19
msgid "how to add other OpenDataSoft widgets"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:20
msgid "how to use CSS classes to format and organize your dashboard"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:24
msgid "**PREREQUISITES**"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:26
msgid ""
"In order to create a dashboard, you need to have access to the back office "
"of an OpenDataSoft portal and the \"Edit all pages\" permission."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:27
msgid ""
"You are highly recommended to follow the first part of this dashboard "
"tutorial, :doc:`\"How to build a dashboard (part 1)\" "
"<how_to_build_dashboard_part1>`, since this second part starts with what we "
"ended with in the first part. The prerequisites of the first part also "
"contain all information about the chosen example dataset."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:34
msgid "Show all images"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:38
msgid "Hide all images"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:45
msgid "Link your widgets together"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:47
msgid ""
"At the end of the first part of this tutorial to build a dashboard, we had a"
" simple dashboard with a title and 3 widgets (a table view, a map view and a"
" chart from one same dataset) one on top of the other. Now, in the previous "
"part, we saw that the great advantage of widgets is that they can interact "
"with each other. However, if we draw a shape on the map, it filters the "
"displayed items of the map, but unfortunatly only the map reacts. Both the "
"table and chart ignore our filter."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:49
msgid ""
"It is because our widgets are not yet linked to one another. The secret to "
"do this, is to use the same context for all widgets. The context is the "
"pivot between each element of your page, this is why all the widgets that "
"should interact together must use the same context. More than that, the "
"context is the link between your widgets and the dataset behind: it defines "
"on which dataset your widgets should work, the data from which dataset your "
"widgets should use."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:53
msgid ""
"1 + Let's find this context! Look at the HTML code of your page. For each "
"widget we added, its code contains 2 main elements: an ``ods-dataset-"
"context`` first, then an ``ods-map`` or ``ods-table`` or ``ods-chart`` "
"depending on the widget. In the code below, we added comments just in order "
"to help you see the different elements that we have."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:96
msgid ""
"As you can see, we have a context for each widget. First, it is not so "
"useful in our case, since all our widgets use the same data from the same "
"dataset. Second, it prevents us to link our widgets together. We must have a"
" unique context."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:100
msgid ""
"2 + At the very beginning of your code, above the div tag with the "
"container-fluid class, declare the unique context of your page. Just like "
"for the widgets, use the tag ``ods-dataset-context`` (and don't forget the "
"closing tag!). Look at the code below to understand how this tag works (once"
" again, comments are used to add explainations to the code)."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:120
msgid ""
"3 + Delete the context of each widget. Don't forget that tags come in pairs:"
" you must delete both the opening tag and closing tag for each widget. Your "
"code should now look like this, with a unique context followed by the 3 "
"widgets tags:"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:154
msgid ""
"4 + Save your page and click the :tutorial-keycap:`Open page` button. Now, "
"if you draw a shape on the map, the map will be filtered according to that "
"shape, but both the table and chart will be filtered as well according to "
"that same filter. Our widgets are linked together!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:165
msgid "Add more OpenDataSoft widgets"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:169
msgid ""
"5 + Now that our widgets are linked, why not add more widgets to make our "
"dashboard even better? Let's start by adding a search bar. It would allow us"
" to make a textual research on all the visualizations at the same time. Go "
"to the OpenDataSoft widgets documentation to learn more about the widget we "
"are goint to use, which is called `odsTextSearch "
"<https://help.opendatasoft.com/widgets/#/api/ods-"
"widgets.directive:odsTextSearch>`_."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:171
msgid ""
"In the odsTextSearch widget documentation, you have several information:"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:173
msgid "the description, to know what the widget can be used for"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:174
msgid "the widget code, to copy and paste in the code of your page"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:175
msgid ""
"a table with the attributes of the widget, which values you must fill up for"
" the widget to work"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:176
msgid "example of both the final code and the final result"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:184
msgid "6 + Copy the odsTextSearch widget code."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:203
msgid ""
"7 + Paste the widget code in the code of your page, where you want it to be "
"displayed. Let's put it under the title, above the first visualization "
"widget."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:205
msgid "Caution"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:208
msgid ""
"Do not save your page yet! Since the attributes of the widget are not "
"completed yet, the platform will consider your widget as invalid and it will"
" create an error."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:251
msgid ""
"8 + As it is now, the search bar cannot work. First, we need to determine "
"which attributes we need, and fill their values up. For this widget, only "
"the ``context`` attribute is mandatory. To keep things simple for this "
"tutorial, let's delete all other attributes."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:264
msgid ""
"9 + At the beginning of this tutorial (see step 2), we created a unique "
"context that can be used throughout our whole page. The name of our context "
"is \"worldheritagelistpublicus\". It is that same context name that we must "
"use to fill up the context attribute of our odsTextSearch widget."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:306
msgid ""
"10 + Save your page and click on :tutorial-keycap:`Preview`. We now have a "
"search bar in our dashboard!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:314
msgid ""
"11 + Let's add another very useful element to our dashboard: filters! It "
"would allow us to apply filters on our visualizations, just like when "
"navigating a dataset. Go to the OpenDataSoft widgets documentation to learn "
"more about the widget we are goint to use, which is called `odsFacets "
"<https://help.opendatasoft.com/widgets/#/api/ods-"
"widgets.directive:odsFacets>`_."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:316
msgid "Important"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:319
msgid ""
"The odsFacets widget allows to retrieve the filters already set for the "
"dataset. It means that if you use this widget for a dashboard, but which "
"related dataset does not have any defined filter, your widget won't be able "
"to display anything."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:327
msgid "12 + Copy the odsFacets widget code."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:340
msgid ""
"13 + Paste the widget code in the code of your page, where you want it to be"
" displayed. Let's put it under our search bar."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:380
msgid ""
"14 + Just like we did with the odsTextSearch widget, we need to fill up the "
"attributes of the odsFacets widget. The latter only has one: the ``context``"
" attribute! Let's fill it up with the name of our page context, exactly as "
"we did for the odsTextSearch widget!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:425
msgid ""
"15 + Save your page and click on :tutorial-keycap:`Preview`. The filters of "
"our dataset are now displayed in our dashboard!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:433
msgid ""
"16 + Now, say we don't want to display all the filters of our dataset. In "
"our UNESCO World Heritage example, let's say we only want to be able to "
"filter by category and country. Copy the following piece of code (also "
"available in the odsFacets widget documentation):"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:451
msgid ""
"17 + Paste it in replacement of the previous, simple odsFacets widget code "
"we used earlier."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:496
msgid ""
"18 + Fill up the context attribute correctly, with the name of your page "
"context."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:514
msgid ""
"19 + Let's now take a look at the rest of the odsFacets widget advanced "
"code. The 2 ``h3`` tags indicate that we have added titles: these will be "
"used to write the name of the filters we want to display, meaning "
"\"Category\" and \"Country\". ``ods-facet name`` is the attribute which will"
" indicate the technical identifier of the field on which the filter is "
"based."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:516
msgid "Note"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:519
msgid ""
"To get the technical identifier of a field, you need to be aware of the "
"dataset schema. It is available in the Information tab of the dataset. The "
"dataset schema shows all information about each field: name (label), "
"description, identifier, type, and a value exemple. It's often convenient to"
" know the type and the identifier of each field when using advanced widget "
"parameters."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:521
msgid ""
"In the code below, comment were added just in order to help you see the "
"different elements that we have."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:544
msgid ""
"20 + Go to the Dataset schema section of the Information tab of your "
"dataset."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:552
msgid ""
"21 + Find the technical identifiers of the fields on which are based the "
"filters you want to add to the dashboard. In our UNESCO World Heritage "
"example dataset, we wanted to filter by category and country. Respectively, "
"the technical identifiers of the fields we want to use as filters are "
"``category`` and ``states``."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:560
msgid ""
"22 + Back to the code of your dashboard, fill up both the titles and the "
"``ods-facet name`` attributes."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:615
msgid ""
"23 + Save your page and click on :tutorial-keycap:`Preview`. Our 2 chosen "
"filters are displayed on our dashboard!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:626
msgid "Format your dashboard: organize your widgets in rows and columns"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:628
msgid ""
"Our dashboard is quite nice, but to make it even nicer we should now give it"
" some style and organize it differently. For now, we have simply piled up "
"all our elements (both titles and widgets). Let's change that!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:630
msgid "We will organize our dashboard in 2 parts:"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:632
msgid ""
"on the left, we will put our navigation elements (the search bar, and the "
"filters underneath)"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:633
msgid ""
"on the right, we will put our data visualizations (the table, and underneath"
" the map and the chart one next to the other)"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:637
msgid ""
"Now, how can we achieve that look for our dashboard? Picture your page as a "
"container. Inside this container, you can have as many rows as you want. "
"Each one of these rows is split into 12 columns of the same size."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:639
msgid "In HTML code, this is what it looks like:"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:660
msgid ""
"When your create a page and want to organize the elements that compose your "
"page, you must put them in rows. For each element, you must decide how many "
"columns you want to allocate to that element."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:664
msgid ""
"24 + Let's reorganize our dashboard in rows and columns. For our example, we"
" will put both the navigation part and the data visualization part in the "
"same row. We will use 3 columns for the navigation elements, and the "
"remaining 9 columns for our visualization elements. Since we wanted to put "
"the map and chart visualizations one next to the other, we will create a row"
" for these 2 : each using 6 columns."
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:668
msgid "In HTML code, this is what our dashboard will look like:"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:718
msgid ""
"25 + Save your page and click on :tutorial-keycap:`Preview`. What a cool "
"dashboard we have created!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:726
msgid ""
"26 + Maybe a little bit more space between the table and the 2 other "
"visualizations would be better though. Let's add a ``br`` tag under the "
"table widget, right before the row containing both the map widget and the "
"chart widget. This tag signifies that we want to add an extra empty ligne at"
" the place of the tag. It is also one of the HTML tags that does not come in"
" a pair!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:793
msgid ""
"27 + Save again and click the Open page button to see the final result!"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:799
msgid "**CONGRATULATIONS!**"
msgstr ""

#: ../../source/dashboard/how_to_build_dashboard_part2.rst:801
msgid ""
"You have finished this tutorial and you now know how to create a complete "
"dashboard with linked widgets and how to format it with CSS classes! If you "
"want to go further with these CSS classes and learn more about "
"responsiveness, don't hesitate to `check our documentation about these "
"topics "
"<https://help.opendatasoft.com/platform/en/customizing_look_and_feel/07_designing_responsive_portal/responsive.html"
"#responsive-page-layouts>`_!"
msgstr ""
